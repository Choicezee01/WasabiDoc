(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{248:function(a,e,t){"use strict";t.r(e);var s=t(17),i=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"headless-wasabi-daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#headless-wasabi-daemon"}},[a._v("#")]),a._v(" Headless Wasabi Daemon")]),a._v(" "),t("p",[a._v("The default of how to interact with your Wasabi wallet is the graphical user interface.\nThere is also a headless daemon where you do not run a resource intensive GUI, but only the command line interface.\nThis daemon is especially useful for power users mixing bitcoin in the backend of their servers.")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#available-commands"}},[a._v("Available Commands")])]),t("li",[t("a",{attrs:{href:"#usage"}},[a._v("Usage")]),t("ul",[t("li",[t("a",{attrs:{href:"#linux"}},[a._v("Linux")])]),t("li",[t("a",{attrs:{href:"#macos"}},[a._v("macOS")])]),t("li",[t("a",{attrs:{href:"#windows"}},[a._v("Windows")])])])])])]),t("p"),a._v(" "),t("hr"),a._v(" "),t("h2",{attrs:{id:"available-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#available-commands"}},[a._v("#")]),a._v(" Available Commands")]),a._v(" "),t("p",[t("code",[a._v("wassabee")]),a._v(" or "),t("code",[a._v("wassabeed")]),a._v(" starts Wasabi wallet when the package is installed.")]),a._v(" "),t("p",[t("code",[a._v("mix")]),a._v(" makes sure Wasabi starts in daemon and not the GUI.")]),a._v(" "),t("p",[t("code",[a._v("--wallet:")]),a._v(" specifies the name of the hot wallet with the coins you want to CoinJoin.")]),a._v(" "),t("p",[t("code",[a._v("--destination:")]),a._v(" specifies the destination wallet that the mixed coins will be coinjoined into, after the target anonymity set is reached.\nA coin will be coinjoined into the first wallet, until anonymity set target is reached, then there will be one additional CoinJoin into the "),t("code",[a._v("destination")]),a._v(" wallet.")]),a._v(" "),t("p",[t("code",[a._v("--keepalive")]),a._v(" keeps the daemon running after all coins have reached the anonymity set target, and continue to CoinJoin when new coins are received into the wallet.")]),a._v(" "),t("p",[t("code",[a._v("--help")]),a._v(" displays help page and exit.")]),a._v(" "),t("h2",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[a._v("#")]),a._v(" Usage")]),a._v(" "),t("h3",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),t("p",[a._v("If the package is installed, execute in the command line in any directory:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~$ wassabee mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])]),t("p",[a._v("If the source code is built, navigate to the WalletWasabi.Gui folder (inside the cloned repo) and execute:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~/WalletWasabi/WalletWasabi.Gui$ dotnet run -- mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])]),t("h3",{attrs:{id:"macos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[a._v("#")]),a._v(" macOS")]),a._v(" "),t("p",[a._v("If the package is installed, navigate to the Applications directory and execute:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~/Applications/Wasabi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" Wallet.app/Contents/MacOs $ wassabee mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])]),t("p",[a._v("If the source code is built, navigate to the WalletWasabi.Gui folder (inside the cloned repo) and execute:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~/WalletWasabi/WalletWasabi.Gui$ dotnet run -- mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])]),t("h3",{attrs:{id:"windows"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[a._v("#")]),a._v(" Windows")]),a._v(" "),t("p",[a._v("If the package is installed, navigate to the WasabiWallet folder and execute:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("C:"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("Program Files"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("WasabiWallet"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" wassabeed.exe mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])]),t("p",[a._v("If the source code is installed, navigate to the WalletWasabi.Gui folder (inside the cloned repo) and execute:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("WalletWasabi"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("WalletWasabi.Gui"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" dotnet run -- mix --wallet:MyFirstWallet --destination:MySecondWallet --keepalive\n")])])])])}),[],!1,null,null,null);e.default=i.exports}}]);